
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Roles {
  VOTER
  ADMIN
}

model Users {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  hashRt    String?  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role      Roles    @default(VOTER)
  space     space[]  
  candidates ElectionCandidate[]
  votes     Vote[]
}

model space {
  id             String   @id @default(uuid())
  position       String  
  candidates     ElectionCandidate[]
  userId         String
  user           Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  duration       Int    
  votingLink     String?   @unique
  voters         Voter[]
}

model ElectionCandidate {
  id     String   @id @default(uuid())
  name   String 
  age    String
  userId String
   spaceId        String
  space          space              @relation(fields: [spaceId], references: [id], onDelete: Cascade)

  user   Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
  votes  Vote[]
}

model Voter {
  id        String   @id @default(uuid())
  email     String   @unique
  spaceId   String
  space     space    @relation(fields: [spaceId], references: [id], onDelete: Cascade)
  votes     Vote[]
}

model Vote {
  id             String   @id @default(uuid())
  voterId        String
  voter          Voter    @relation(fields: [voterId], references: [id], onDelete: Cascade)
  candidateId    String
  candidate      ElectionCandidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
   userId         String
  user           Users    @relation(fields: [userId], references: [id], onDelete: Cascade)
}